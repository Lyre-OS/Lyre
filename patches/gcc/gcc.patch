diff '--color=auto' -urN gcc-10.2.0/config.sub gcc-10.2.0-patched/config.sub
--- gcc-10.2.0/config.sub	2020-07-23 08:35:16.912379792 +0200
+++ gcc-10.2.0-patched/config.sub	2021-01-04 08:29:57.514644382 +0100
@@ -135,7 +135,7 @@
 			| linux-newlib* | linux-musl* | linux-uclibc* | uclinux-uclibc* \
 			| uclinux-gnu* | kfreebsd*-gnu* | knetbsd*-gnu* | netbsd*-gnu* \
 			| netbsd*-eabi* | kopensolaris*-gnu* | cloudabi*-eabi* \
-			| storm-chaos* | os2-emx* | rtmk-nova*)
+			| storm-chaos* | os2-emx* | rtmk-nova* | lyre*)
 				basic_machine=$field1
 				os=$maybe_os
 				;;
@@ -1366,7 +1366,7 @@
 	     | skyos* | haiku* | rdos* | toppers* | drops* | es* \
 	     | onefs* | tirtos* | phoenix* | fuchsia* | redox* | bme* \
 	     | midnightbsd* | amdhsa* | unleashed* | emscripten* | wasi* \
-	     | nsk* | powerunix)
+	     | nsk* | powerunix | lyre*)
 	# Remember, each alternative MUST END IN *, to match a version number.
 		;;
 	qnx*)
diff '--color=auto' -urN gcc-10.2.0/fixincludes/mkfixinc.sh gcc-10.2.0-patched/fixincludes/mkfixinc.sh
--- gcc-10.2.0/fixincludes/mkfixinc.sh	2020-07-23 08:35:16.932380013 +0200
+++ gcc-10.2.0-patched/fixincludes/mkfixinc.sh	2021-01-04 08:29:57.514644382 +0100
@@ -12,6 +12,7 @@
 # Check for special fix rules for particular targets
 case $machine in
     i?86-*-cygwin* | \
+    x86_64-*-lyre* | \
     i?86-*-mingw32* | \
     x86_64-*-mingw32* | \
     powerpc-*-eabisim* | \
diff '--color=auto' -urN gcc-10.2.0/gcc/config/lyre.h gcc-10.2.0-patched/gcc/config/lyre.h
--- gcc-10.2.0/gcc/config/lyre.h	1970-01-01 01:00:00.000000000 +0100
+++ gcc-10.2.0-patched/gcc/config/lyre.h	2021-01-04 08:29:57.514644382 +0100
@@ -0,0 +1,29 @@
+#undef TARGET_LYRE
+#define TARGET_LYRE 1
+
+#undef LIB_SPEC
+#define LIB_SPEC "-lc -lm"
+
+#undef STARTFILE_SPEC
+#define STARTFILE_SPEC "%{!shared:crt0.o%s} crti.o%s %{shared:crtbeginS.o%s;:crtbegin.o%s}"
+
+#undef ENDFILE_SPEC
+#define ENDFILE_SPEC "%{shared:crtendS.o%s;:crtend.o%s} crtn.o%s"
+
+#define GNU_USER_LINK_EMULATION32 "elf_i386"
+#define GNU_USER_LINK_EMULATION64 "elf_x86_64"
+#define GNU_USER_LINK_EMULATIONX32 "elf32_x86_64"
+
+#define GNU_USER_DYNAMIC_LINKER32 "/lib/ld_i386.so"
+#define GNU_USER_DYNAMIC_LINKER64 "/lib/ld.so"
+#define GNU_USER_DYNAMIC_LINKERX32 "/lib/ld32.so"
+
+#undef TARGET_OS_CPP_BUILTINS
+#define TARGET_OS_CPP_BUILTINS()         \
+  do {                                   \
+    builtin_define ("__lyre__");    \
+    builtin_define ("__unix__");         \
+    builtin_assert ("system=lyre"); \
+    builtin_assert ("system=unix");      \
+    builtin_assert ("system=posix");     \
+  } while (0);
diff '--color=auto' -urN gcc-10.2.0/gcc/config.gcc gcc-10.2.0-patched/gcc/config.gcc
--- gcc-10.2.0/gcc/config.gcc	2020-07-23 08:35:17.316384243 +0200
+++ gcc-10.2.0-patched/gcc/config.gcc	2021-01-04 08:29:57.514644382 +0100
@@ -773,6 +773,15 @@
   esac
   use_gcc_stdint=wrap
   ;;
+*-*-lyre*)
+  extra_options="$extra_options gnu-user.opt"
+  gas=yes
+  gnu_ld=yes
+  default_use_cxa_atexit=yes
+  use_gcc_stdint=wrap
+  tmake_file="${tmake_file} t-slibgcc"
+  thread_file='posix'
+  ;;
 *-*-fuchsia*)
   native_system_header_dir=/include
   ;;
@@ -2202,6 +2211,9 @@
 			;;
 	esac
 	;;
+x86_64-*-lyre*)
+	tm_file="${tm_file} i386/unix.h i386/att.h dbxelf.h elfos.h gnu-user.h glibc-stdint.h i386/x86-64.h i386/gnu-user-common.h i386/gnu-user64.h lyre.h"
+	;;
 x86_64-*-fuchsia*)
 	tmake_file="${tmake_file} i386/t-x86_64-elf"
 	tm_file="${tm_file} i386/unix.h i386/att.h elfos.h newlib-stdint.h i386/i386elf.h i386/x86-64.h fuchsia.h"
diff '--color=auto' -urN gcc-10.2.0/libgcc/config.host gcc-10.2.0-patched/libgcc/config.host
--- gcc-10.2.0/libgcc/config.host	2020-07-23 08:35:18.752400064 +0200
+++ gcc-10.2.0-patched/libgcc/config.host	2021-01-04 08:34:26.160551360 +0100
@@ -103,7 +103,7 @@
 	;;
 avr-*-*)
 	cpu_type=avr
-	;;    
+	;;
 bfin*-*)
 	cpu_type=bfin
 	;;
@@ -248,6 +248,11 @@
   tmake_file="$tmake_file t-crtstuff-pic t-libgcc-pic t-eh-dw2-dip t-slibgcc t-slibgcc-fuchsia"
   extra_parts="crtbegin.o crtend.o"
   ;;
+*-*-lyre*)
+  extra_parts="$extra_parts crti.o crtbegin.o crtbeginS.o crtend.o crtendS.o crtn.o"
+  tmake_file="$tmake_file t-crtstuff-pic"
+  tmake_file="$tmake_file t-slibgcc t-slibgcc-gld t-slibgcc-elf-ver t-libgcc-pic"
+  ;;
 *-*-linux* | frv-*-*linux* | *-*-kfreebsd*-gnu | *-*-gnu* | *-*-kopensolaris*-gnu | *-*-uclinuxfdpiceabi)
   tmake_file="$tmake_file t-crtstuff-pic t-libgcc-pic t-eh-dw2-dip t-slibgcc t-slibgcc-gld t-slibgcc-elf-ver t-linux"
   extra_parts="crtbegin.o crtbeginS.o crtbeginT.o crtend.o crtendS.o"
@@ -711,6 +716,9 @@
 x86_64-*-fuchsia*)
 	tmake_file="$tmake_file t-libgcc-pic"
 	;;
+x86_64-*-lyre*)
+	tmake_file="$tmake_file i386/t-crtstuff"
+	;;
 i[34567]86-*-dragonfly*)
 	tmake_file="${tmake_file} i386/t-dragonfly i386/t-crtstuff"
 	md_unwind_header=i386/dragonfly-unwind.h
@@ -927,7 +935,7 @@
 lm32-*-uclinux*)
         extra_parts="$extra_parts crtbegin.o crtendS.o crtbeginT.o"
         tmake_file="lm32/t-lm32 lm32/t-uclinux t-libgcc-pic t-softfp-sfdf t-softfp"
-	;;	
+	;;
 m32r-*-elf*)
 	tmake_file="$tmake_file m32r/t-m32r t-fdpbit"
 	extra_parts="$extra_parts crtinit.o crtfini.o"
diff '--color=auto' -urN gcc-10.2.0/libstdc++-v3/crossconfig.m4 gcc-10.2.0-patched/libstdc++-v3/crossconfig.m4
--- gcc-10.2.0/libstdc++-v3/crossconfig.m4	2020-07-23 08:35:19.188404867 +0200
+++ gcc-10.2.0-patched/libstdc++-v3/crossconfig.m4	2021-01-04 08:29:57.517977717 +0100
@@ -131,6 +131,14 @@
     AC_CHECK_FUNCS(sockatmark)
     ;;
 
+  *-lyre*)
+    GLIBCXX_CHECK_COMPILER_FEATURES
+    GLIBCXX_CHECK_LINKER_FEATURES
+    GLIBCXX_CHECK_MATH_SUPPORT
+    GLIBCXX_CHECK_STDLIB_SUPPORT
+    AC_CHECK_FUNCS(aligned_alloc posix_memalign memalign _aligned_malloc)
+    ;;
+
   *-fuchsia*)
     SECTION_FLAGS='-ffunction-sections -fdata-sections'
     AC_SUBST(SECTION_FLAGS)
diff '--color=auto' -urN gcc-10.2.0/libtool.m4 gcc-10.2.0-patched/libtool.m4
--- gcc-10.2.0/libtool.m4	2020-07-23 08:35:19.428407511 +0200
+++ gcc-10.2.0-patched/libtool.m4	2021-01-04 08:29:57.517977717 +0100
@@ -2499,6 +2499,16 @@
   dynamic_linker='GNU/Linux ld.so'
   ;;
 
+lyre*)
+  version_type=linux
+  need_lib_prefix=no
+  need_version=no
+  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}${major} ${libname}${shared_ext}'
+  soname_spec='${libname}${release}${shared_ext}$major'
+  shlibpath_var=LD_LIBRARY_PATH
+  hardcode_into_libs=yes
+  ;;
+
 netbsd*)
   version_type=sunos
   need_lib_prefix=no
@@ -3098,6 +3108,10 @@
   lt_cv_deplibs_check_method=pass_all
   ;;
 
+lyre*)
+  lt_cv_deplibs_check_method=pass_all
+  ;;
+
 netbsd*)
   if echo __ELF__ | $CC -E - | $GREP __ELF__ > /dev/null; then
     lt_cv_deplibs_check_method='match_pattern /lib[[^/]]+(\.so\.[[0-9]]+\.[[0-9]]+|_pic\.a)$'
